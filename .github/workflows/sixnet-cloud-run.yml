name: sixnet-nextjs-cloud-run

on:
  push:
    branches:
      - main

env:
  CLOUD_RUN_PROJECT_ID: ${{ secrets.SIXNET_CLOUD_RUN_PROJECT_NAME }}
  CLOUD_RUN_REGION: asia-northeast1
  # project-name but it can be anything you want
  REPO_NAME: ${{ github.event.repository.name }}
  IMAGE_NAME: ${{ github.event.repository.name }}
  NEXT_PUBLIC_API_URL: ${{ vars.API_URL }}
  NEXT_PUBLIC_RPC_URL: ${{ vars.RPC_URL }}
  NEXT_PUBLIC_TXS_API_URL: ${{ vars.TXS_API_URL }}
  NEXT_PUBLIC_DATA_CHAIN_TXS_API_URL: ${{ vars.DATA_CHAIN_TXS_API_URL }}
  NEXT_PUBLIC_ARCH_API_URL: ${{ vars.ARCH_API_URL }}
  NEXT_PUBLIC_ARCH_RPC_URL: ${{ vars.ARCH_RPC_URL }}
  NEXT_PUBLIC_EVM_RPC_URL: ${{ vars.EVM_RPC_URL }}
  NEXT_PUBLIC_BLOCK_SCOUT_API_URL: ${{ vars.BLOCK_SCOUT_API_URL }}
  NEXT_PUBLIC_CONSOLE_LOG_ENABLE: ${{ vars.CONSOLE_LOG_ENABLE }}
  NEXT_PUBLIC_CONSOLE_TIME_ENABLE: ${{ vars.CONSOLE_TIME_ENABLE }}
  NEXT_PUBLIC_CHAIN_NAME: ${{ vars.NEXT_PUBLIC_CHAIN_NAME }}
  CONTAINER_REGISTRY: asia-southeast1-docker.pkg.dev

jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    environment: SIXNET
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # This step is where our service account will be authenticated
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.SIXNET_CLOUD_RUN_PROJECT_NAME }}
          service_account_key: ${{ secrets.SIXNET_CLOUD_RUN_SERVICE_ACCOUNT }}
          service_account_email: ${{ secrets.SIXNET_CLOUD_RUN_SERVICE_ACCOUNT_EMAIL }}

      - name: Enable the necessary APIs and enable docker auth
        run: |-
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud --quiet auth configure-docker $CONTAINER_REGISTRY
      - name: Build and tag image
        run: |-
          docker build . --build-arg NEXT_PUBLIC_CHAIN_NAME=$NEXT_PUBLIC_CHAIN_NAME --tag "$CONTAINER_REGISTRY/$CLOUD_RUN_PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA"
      - name: Push image to GCR
        run: |-
          docker push $CONTAINER_REGISTRY/$CLOUD_RUN_PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA
      - name: Deploy
        run: |-
          gcloud components install beta --quiet
          gcloud beta run deploy $REPO_NAME --image $CONTAINER_REGISTRY/$CLOUD_RUN_PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA \
            --project $CLOUD_RUN_PROJECT_ID \
            --platform managed \
            --region $CLOUD_RUN_REGION \
            --allow-unauthenticated \
            --set-env-vars NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL,NEXT_PUBLIC_RPC_URL=$NEXT_PUBLIC_RPC_URL,NEXT_PUBLIC_TXS_API_URL=$NEXT_PUBLIC_TXS_API_URL,NEXT_PUBLIC_DATA_CHAIN_TXS_API_URL=$NEXT_PUBLIC_DATA_CHAIN_TXS_API_URL,NEXT_PUBLIC_ARCH_API_URL=$NEXT_PUBLIC_ARCH_API_URL,NEXT_PUBLIC_ARCH_RPC_URL=$NEXT_PUBLIC_ARCH_RPC_URL \
            --set-env-vars NEXT_PUBLIC_EVM_RPC_URL=$NEXT_PUBLIC_EVM_RPC_URL,NEXT_PUBLIC_BLOCK_SCOUT_API_URL=$NEXT_PUBLIC_BLOCK_SCOUT_API_URL,NEXT_PUBLIC_CONSOLE_LOG_ENABLE=$NEXT_PUBLIC_CONSOLE_LOG_ENABLE,NEXT_PUBLIC_CONSOLE_TIME_ENABLE=$NEXT_PUBLIC_CONSOLE_TIME_ENABLE,NEXT_PUBLIC_CHAIN_NAME=$NEXT_PUBLIC_CHAIN_NAME \
            --quiet
